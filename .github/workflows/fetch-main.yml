name: Fetch FCA Main Slice

on:
  workflow_dispatch:
    inputs:
      fetch_mode:
        description: 'Which FRNs to fetch: full, missing, or errors'
        required: true
        default: 'missing'
        type: choice
        options:
          - full
          - missing
          - errors

permissions:
  contents: write

jobs:
  fetch-shard-1:
    runs-on: ubuntu-latest
    env:
      FCA_API_KEY:   ${{ secrets.FCA_API_KEY }}
      FCA_API_EMAIL: ${{ secrets.FCA_API_EMAIL }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python & install deps
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install requests

      - name: Fetch shard #1
        run: |
          MODE=${{ github.event.inputs.fetch_mode }}
          FLAGS=""
          if [[ "$MODE" == "missing" ]]; then FLAGS="--only-missing"; fi
          if [[ "$MODE" == "errors"  ]]; then FLAGS="--only-errors";  fi
          python3 fca-dashboard/scripts/fetch_main.py \
            --shards 5 \
            --shard-index 1 \
            --threads 5 \
            $FLAGS

      - uses: actions/upload-artifact@v4
        with:
          name: main-shard-1
          path: fca-dashboard/data/fca_main_shard_1.json

  fetch-shard-2:
    needs: fetch-shard-1
    runs-on: ubuntu-latest
    env:
      FCA_API_KEY:   ${{ secrets.FCA_API_KEY }}
      FCA_API_EMAIL: ${{ secrets.FCA_API_EMAIL }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python & install deps
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install requests

      - name: Fetch shard #2
        run: |
          MODE=${{ github.event.inputs.fetch_mode }}
          FLAGS=""
          if [[ "$MODE" == "missing" ]]; then FLAGS="--only-missing"; fi
          if [[ "$MODE" == "errors"  ]]; then FLAGS="--only-errors";  fi
          python3 fca-dashboard/scripts/fetch_main.py \
            --shards 5 \
            --shard-index 2 \
            --threads 5 \
            $FLAGS

      - uses: actions/upload-artifact@v4
        with:
          name: main-shard-2
          path: fca-dashboard/data/fca_main_shard_2.json

  fetch-shard-3:
    needs: fetch-shard-2
    runs-on: ubuntu-latest
    env:
      FCA_API_KEY:   ${{ secrets.FCA_API_KEY }}
      FCA_API_EMAIL: ${{ secrets.FCA_API_EMAIL }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python & install deps
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install requests

      - name: Fetch shard #3
        run: |
          MODE=${{ github.event.inputs.fetch_mode }}
          FLAGS=""
          if [[ "$MODE" == "missing" ]]; then FLAGS="--only-missing"; fi
          if [[ "$MODE" == "errors"  ]]; then FLAGS="--only-errors";  fi
          python3 fca-dashboard/scripts/fetch_main.py \
            --shards 5 \
            --shard-index 3 \
            --threads 5 \
            $FLAGS

      - uses: actions/upload-artifact@v4
        with:
          name: main-shard-3
          path: fca-dashboard/data/fca_main_shard_3.json

  fetch-shard-4:
    needs: fetch-shard-3
    runs-on: ubuntu-latest
    env:
      FCA_API_KEY:   ${{ secrets.FCA_API_KEY }}
      FCA_API_EMAIL: ${{ secrets.FCA_API_EMAIL }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python & install deps
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install requests

      - name: Fetch shard #4
        run: |
          MODE=${{ github.event.inputs.fetch_mode }}
          FLAGS=""
          if [[ "$MODE" == "missing" ]]; then FLAGS="--only-missing"; fi
          if [[ "$MODE" == "errors"  ]]; then FLAGS="--only-errors";  fi
          python3 fca-dashboard/scripts/fetch_main.py \
            --shards 5 \
            --shard-index 4 \
            --threads 5 \
            $FLAGS

      - uses: actions/upload-artifact@v4
        with:
          name: main-shard-4
          path: fca-dashboard/data/fca_main_shard_4.json

  fetch-shard-5:
    needs: fetch-shard-4
    runs-on: ubuntu-latest
    env:
      FCA_API_KEY:   ${{ secrets.FCA_API_KEY }}
      FCA_API_EMAIL: ${{ secrets.FCA_API_EMAIL }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python & install deps
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - run: pip install requests

      - name: Fetch shard #5
        run: |
          MODE=${{ github.event.inputs.fetch_mode }}
          FLAGS=""
          if [[ "$MODE" == "missing" ]]; then FLAGS="--only-missing"; fi
          if [[ "$MODE" == "errors"  ]]; then FLAGS="--only-errors";  fi
          python3 fca-dashboard/scripts/fetch_main.py \
            --shards 5 \
            --shard-index 5 \
            --threads 5 \
            $FLAGS

      - uses: actions/upload-artifact@v4
        with:
          name: main-shard-5
          path: fca-dashboard/data/fca_main_shard_5.json

  merge:
    needs:
      - fetch-shard-1
      - fetch-shard-2
      - fetch-shard-3
      - fetch-shard-4
      - fetch-shard-5
    runs-on: ubuntu-latest
    steps:
      - name: Check out code (full history)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Sync with remote
        run: git pull origin main

      - name: Download all shards
        uses: actions/download-artifact@v4
        with:
          path: fca-dashboard/data

      - name: Merge shards into fca_main.json
        run: |
          python3 - <<'EOF'
          import json, glob, os

          MAIN = 'fca-dashboard/data/fca_main.json'
          if os.path.exists(MAIN):
              combined = json.load(open(MAIN, encoding='utf-8'))
          else:
              combined = {}

          for shard in glob.glob('fca-dashboard/data/fca_main_shard_*.json'):
              data = json.load(open(shard, encoding='utf-8'))
              combined.update(data)

          with open(MAIN, 'w', encoding='utf-8') as f:
              json.dump(combined, f, indent=2, ensure_ascii=False)

          print(f"Merged {len(combined)} FRNs into {MAIN}")
          EOF

      - name: Commit & push merged main
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add fca-dashboard/data/fca_main.json
          git diff --cached --quiet || git commit -m "chore(fca): merge main shards"
          git push origin HEAD:main
