# File: .github/workflows/fund-tracker.yml

name: Fund Tracker

permissions:
  contents: write
  actions: read

on:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Start date for ingest (YYYY-MM-DD, today, or yesterday)'
        required: false
        default: 'today'
      end_date:
        description: 'End date for ingest (YYYY-MM-DD, today, or yesterday)'
        required: false
        default: 'today'

jobs:
  update-data:
    runs-on: ubuntu-latest
    env:
      CH_API_KEY:   ${{ secrets.CH_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      # ────────────────────────────────────────────────────────────────────────────
      # 1) Check out the 'main' branch (UI + Python code lives here)
      - name: Check out repository (main)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      # ────────────────────────────────────────────────────────────────────────────
      # 2) Set up Python
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # ────────────────────────────────────────────────────────────────────────────
      # 3) Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --prefer-binary -r requirements.txt

      # ────────────────────────────────────────────────────────────────────────────
      # 4) Run fund_tracker.py
      #    - On schedule: no flags → defaults to start_date="today", end_date="today"
      #    - On manual dispatch: pass start_date/end_date from workflow inputs
      - name: Run fund_tracker
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            python fund_tracker.py \
              --start_date "${{ github.event.inputs.start_date }}" \
              --end_date   "${{ github.event.inputs.end_date }}"
          else
            python fund_tracker.py
          fi

      # ────────────────────────────────────────────────────────────────────────────
      # 5) Run fetch_directors.py (always runs, regardless of schedule vs dispatch)
      - name: Fetch directors for relevant companies
        run: |
          python fetch_directors.py

      # ────────────────────────────────────────────────────────────────────────────
      # 6) Clone the 'data' branch into a fresh folder
      - name: Clone data branch
        run: |
          git clone --branch data \
            https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} \
            data-branch

      # ────────────────────────────────────────────────────────────────────────────
      # 7) Copy the newly generated CSV/XLSX/JSON into the cloned data-branch
      - name: Copy new data files into data-branch
        run: |
          mkdir -p data-branch/docs/assets/data
          cp docs/assets/data/master_companies.csv     data-branch/docs/assets/data/
          cp docs/assets/data/master_companies.xlsx    data-branch/docs/assets/data/
          cp docs/assets/data/relevant_companies.csv   data-branch/docs/assets/data/
          cp docs/assets/data/relevant_companies.xlsx  data-branch/docs/assets/data/
          cp docs/assets/data/directors.json           data-branch/docs/assets/data/

      # ────────────────────────────────────────────────────────────────────────────
      # 8) Commit & push only those data files to the 'data' branch
      - name: Commit updated data files to data branch
        run: |
          cd data-branch
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage any changed or new data files
          git add docs/assets/data/master_companies.csv \
                  docs/assets/data/master_companies.xlsx \
                  docs/assets/data/relevant_companies.csv \
                  docs/assets/data/relevant_companies.xlsx \
                  docs/assets/data/directors.json

          # If there are no changes, skip committing/pushing
          if git diff --cached --quiet; then
            echo "No changes to data — skipping push"
            exit 0
          fi

          # Otherwise, commit + push
          git commit -m "chore(data): update data files [skip ci]"
          git push origin data
