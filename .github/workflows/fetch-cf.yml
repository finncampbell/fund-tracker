# .github/workflows/fetch-cf.yml
name: Fetch FCA Individual Controlled Functions (Sharded)

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      threads:
        description: 'Number of threads per shard'
        required: true
        default: '5'
      shards:
        description: 'How many shards to split the IRNs into'
        required: true
        default: '1'
      limit:
        description: 'Max IRNs to process (blank = no cap)'
        required: false
        default: ''
      only_missing:
        description: 'Only fetch CF for IRNs not yet in store'
        required: false
        default: false
        type: boolean
      retry_failed:
        description: 'Only retry CF fetches that failed previously'
        required: false
        default: false
        type: boolean
      fresh:
        description: 'Ignore existing CF store and re-fetch all IRNs'
        required: false
        default: false
        type: boolean
      dry_run:
        description: 'Dry run: list IRNs without making API calls'
        required: false
        default: false
        type: boolean
      no_push:
        description: 'Don’t commit/push the final merged CF JSON'
        required: false
        default: false
        type: boolean

jobs:
  split:
    runs-on: ubuntu-latest
    outputs:
      shard_list: ${{ steps.build-list.outputs.shard_list }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - id: build-list
        name: Build shard indices
        run: |
          N="${{ github.event.inputs.shards }}"
          python3 - << 'EOF' > shards.json
import json
print(json.dumps(list(range(1, int(N)+1))))
EOF
          echo "shard_list=$(cat shards.json)" >> $GITHUB_OUTPUT

  fetch:
    needs: split
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: ${{ fromJson(needs.split.outputs.shard_list) }}
      max-parallel: 1

    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Fetch CF shard #${{ matrix.shard }}
        env:
          RL_MAX_CALLS: '45'
          RL_WINDOW_S:  '10'
          FCA_API_EMAIL: ${{ secrets.FCA_API_EMAIL }}
          FCA_API_KEY:   ${{ secrets.FCA_API_KEY }}
        run: |
          THREADS=${{ github.event.inputs.threads }}
          SHARDS=${{ github.event.inputs.shards }}
          SHARD_INDEX=${{ matrix.shard }}
          CMD="python3 fca-dashboard/scripts/fetch_cf.py \
            --threads $THREADS \
            --shards $SHARDS \
            --shard-index $SHARD_INDEX"
          if [ -n "${{ github.event.inputs.limit }}" ]; then
            CMD="$CMD --limit ${{ github.event.inputs.limit }}"
          fi
          if [ "${{ github.event.inputs.only_missing }}" = "true" ]; then
            CMD="$CMD --only-missing"
          fi
          if [ "${{ github.event.inputs.retry_failed }}" = "true" ]; then
            CMD="$CMD --retry-failed"
          fi
          if [ "${{ github.event.inputs.fresh }}" = "true" ]; then
            CMD="$CMD --fresh"
          fi
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            CMD="$CMD --dry-run"
          fi
          echo "▶️ Running: $CMD"
          eval "$CMD"

      - name: Upload shard artifact
        uses: actions/upload-artifact@v4
        with:
          name: cf-part-${{ matrix.shard }}
          path: docs/fca-dashboard/data/fca_cf_part${{ matrix.shard }}.json

  merge:
    needs: fetch
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Download CF shard artifacts
        uses: actions/download-artifact@v4
        with:
          path: docs/fca-dashboard/data

      - name: Merge CF shards
        run: python3 fca-dashboard/scripts/merge_cf_parts.py \
               docs/fca-dashboard/data \
               docs/fca-dashboard/data/fca_cf.json

      - name: Commit & push merged CF
        if: ${{ github.event.inputs.no_push != 'true' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add docs/fca-dashboard/data/fca_cf.json
          git diff --cached --quiet || git commit -m "chore(fca): merge controlled functions"
          git pull --rebase origin main
          git push origin HEAD:main
