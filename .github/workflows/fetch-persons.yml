name: Fetch FCA Individual Records (Sharded)

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      threads:
        description: 'Number of parallel threads per shard (optimum ≃5)'
        required: true
        default: '5'
      shards:
        description: 'Number of sequential shards to split the IRN list into'
        required: true
        default: '1'
      limit:
        description: 'Max IRNs to process (blank = full run)'
        required: false
        default: ''
      only_missing:
        description: 'Only fetch IRNs not yet present in store'
        required: false
        default: false
        type: boolean
      retry_failed:
        description: 'Only retry IRNs that errored last run'
        required: false
        default: false
        type: boolean
      fresh:
        description: 'Full refresh: ignore existing data'
        required: false
        default: false
        type: boolean
      dry_run:
        description: 'Dry run: list IRNs without making any API calls'
        required: false
        default: false
        type: boolean
      no_push:
        description: 'Don’t commit/push the JSON outputs (for testing)'
        required: false
        default: false
        type: boolean

jobs:
  fetch:
    runs-on: ubuntu-latest

    steps:
      # 1. Shallow checkout of the latest commit only
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1    # ← only pull the latest commit for speed

      # 2. Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 3. Install dependencies
      - name: Install dependencies
        run: pip install requests

      # 4. Run sharded fetch script
      - name: Fetch individual records (sharded)
        env:
          FCA_API_EMAIL: ${{ secrets.FCA_API_EMAIL }}
          FCA_API_KEY:   ${{ secrets.FCA_API_KEY }}
        run: |
          CMD="python3 fca-dashboard/scripts/fetch_persons.py \
            --threads ${{ github.event.inputs.threads }} \
            --shards ${{ github.event.inputs.shards }}"
          if [ -n "${{ github.event.inputs.limit }}" ]; then
            CMD="$CMD --limit ${{ github.event.inputs.limit }}"
          fi
          if [ "${{ github.event.inputs.only_missing }}" = "true" ]; then
            CMD="$CMD --only-missing"
          fi
          if [ "${{ github.event.inputs.retry_failed }}" = "true" ]; then
            CMD="$CMD --retry-failed"
          fi
          if [ "${{ github.event.inputs.fresh }}" = "true" ]; then
            CMD="$CMD --fresh"
          fi
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            CMD="$CMD --dry-run"
          fi
          echo "▶️ Running: $CMD"
          $CMD

      # 5. Commit & push results
      - name: Commit & push results
        if: ${{ github.event.inputs.no_push != 'true' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add docs/fca-dashboard/data/fca_persons_part*.json docs/fca-dashboard/data/fca_persons.json
          git diff --cached --quiet || git commit -m "chore(fca): update individual records (sharded)"
          git pull --rebase origin main
          git push origin HEAD:main
