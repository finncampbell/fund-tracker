name: Fetch FCA Firm Individuals (Threaded)

# We need write access so the final JSON can be pushed back
permissions:
  contents: write

on:
  workflow_dispatch:
    # ── Controls for parallelism and quick tests ─────────────────────────────
    inputs:
      threads:
        description: 'Number of parallel threads to use'
        required: true
        default: '5'
      limit:
        description: 'Max FRNs to process (blank = full run)'
        required: false
        default: ''

    # ── New modes for selective processing ──────────────────────────────────
      only_missing:
        description: '☑️ Only fetch FRNs not yet in the UI JSON'
        required: false
        default: false
        type: boolean
      only_blank:
        description: '☑️ Only fetch FRNs whose last-run results were empty'
        required: false
        default: false
        type: boolean
      retry_failed:
        description: '☑️ Only retry FRNs that errored in the previous run'
        required: false
        default: false
        type: boolean
      skip_large:
        description: '☑️ Skip FRNs whose existing individual-count > large_threshold'
        required: false
        default: false
        type: boolean
      only_large:
        description: '☑️ Only fetch FRNs with existing individual-count > large_threshold'
        required: false
        default: false
        type: boolean
      large_threshold:
        description: 'Threshold number of individuals to consider a firm “large”'
        required: false
        default: '50'
      dry_run:
        description: '☑️ Dry run: show which FRNs would be processed, don’t call the API'
        required: false
        default: false
        type: boolean
      no_push:
        description: '☑️ Don’t commit/push the final JSON (for testing)'
        required: false
        default: false
        type: boolean

jobs:
  fetch:
    runs-on: ubuntu-latest
    # (Optionally enforce your own timeout here)
    # timeout-minutes: 360

    steps:
      - name: Check out repository (full history)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Fetch all firm individuals (threaded)
        # Pass all dispatch inputs through as flags
        env:
          FCA_API_EMAIL: ${{ secrets.FCA_API_EMAIL }}
          FCA_API_KEY:   ${{ secrets.FCA_API_KEY }}
        run: |
          # Build base command
          CMD="python3 fca-dashboard/scripts/fetch_firm_individuals.py"
          CMD="$CMD --threads ${{ github.event.inputs.threads }}"

          # Quick-test cap
          if [ -n "${{ github.event.inputs.limit }}" ]; then
            CMD="$CMD --limit ${{ github.event.inputs.limit }}"
          fi

          # Selective modes
          if [ "${{ github.event.inputs.only_missing }}" = "true" ]; then
            CMD="$CMD --only-missing"
          fi
          if [ "${{ github.event.inputs.only_blank }}" = "true" ]; then
            CMD="$CMD --only-blank"
          fi
          if [ "${{ github.event.inputs.retry_failed }}" = "true" ]; then
            CMD="$CMD --retry-failed"
          fi
          if [ "${{ github.event.inputs.skip_large }}" = "true" ]; then
            CMD="$CMD --skip-large"
          fi
          if [ "${{ github.event.inputs.only_large }}" = "true" ]; then
            CMD="$CMD --only-large"
          fi

          # Large-threshold parameter
          if [ -n "${{ github.event.inputs.large_threshold }}" ]; then
            CMD="$CMD --large-threshold ${{ github.event.inputs.large_threshold }}"
          fi

          # Dry-run flag
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            CMD="$CMD --dry-run"
          fi

          echo "▶️ Running: $CMD"
          $CMD

      - name: Commit & push updated data
        # Skip commit/push if no_push is true
        if: ${{ github.event.inputs.no_push != 'true' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"

          # Stage the updated JSON
          git add docs/fca-dashboard/data/fca_individuals_by_firm.json

          # Commit only if there are changes
          git diff --cached --quiet || git commit -m "chore(fca): update firm individuals"

          # Rebase any remote changes, then push
          git pull --rebase origin main
          git push origin HEAD:main
