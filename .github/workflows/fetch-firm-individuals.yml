name: Fetch FCA Firm Individuals (Ad-hoc)

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      chunks:
        description: 'Number of parallel chunks to split the FRN list into'
        required: false
        default: '4'
      limit:
        description: 'Max FRNs per chunk (blank = full list)'
        required: false
        default: ''

jobs:

  # First split the FRN list into N chunks
  split:
    runs-on: ubuntu-latest
    outputs:
      chunk-matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - name: Determine chunk boundaries
        id: set-matrix
        run: |
          # read total FRNs
          total=$(jq 'length' fca-dashboard/data/all_frns_with_names.json)
          N=${{ github.event.inputs.chunks }}
          # build JSON array of chunk indices [0,1,...,N-1]
          idxs=$(jq -n --arg n "$N" '[range(0; ($n|tonumber))]')
          echo "::set-output name=matrix::{\"chunk\":"$idxs",\"total\":$total}"
  
  # Fetch each chunk in parallel
  fetch:
    needs: split
    strategy:
      matrix: ${{ fromJson(needs.split.outputs.chunk-matrix) }}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Calculate this chunk’s slice
        id: slice
        run: |
          N=${{ github.event.inputs.chunks }}
          total=${{ matrix.total }}
          chunk=${{ matrix.chunk }}
          # determine start/end index for this chunk
          per=$(( (total + N - 1) / N ))
          offset=$(( chunk * per ))
          echo "offset=$offset" >> $GITHUB_OUTPUT
          echo "limit=$per"    >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Fetch individuals chunk ${{ matrix.chunk }}
        env:
          FCA_API_EMAIL: ${{ secrets.FCA_API_EMAIL }}
          FCA_API_KEY:   ${{ secrets.FCA_API_KEY }}
        run: |
          python fca-dashboard/scripts/fetch_firm_individuals.py \
            --offset ${{ steps.slice.outputs.offset }} \
            --limit  ${{ steps.slice.outputs.limit }}

      - name: Upload this chunk’s results
        uses: actions/upload-artifact@v3
        with:
          name: chunk-${{ matrix.chunk }}
          path: fca-dashboard/data/fca_individuals_by_firm.json

  # Merge all chunk files back together
  merge:
    needs: fetch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download all chunk artifacts
        uses: actions/download-artifact@v3
        with:
          path: fca-dashboard/data/chunks

      - name: Merge chunks into one file
        run: |
          python fca-dashboard/scripts/merge_fca_individuals.py \
            --input-dir fca-dashboard/data/chunks \
            --output fca-dashboard/data/fca_individuals_by_firm.json

      - name: Commit & push merged JSON
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add fca-dashboard/data/fca_individuals_by_firm.json
          git diff --cached --quiet || git commit -m "chore(fca): merge firm individuals"
          git push origin HEAD:main
