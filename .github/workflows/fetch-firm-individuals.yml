# .github/workflows/fetch-firm-individuals.yml
name: Fetch FCA Firm Individuals (Ad-hoc)

on:
  workflow_dispatch:
    inputs:
      limit:
        description: 'How many FRNs to fetch (blank = all)'
        required: false
        default: ''
      chunks:
        description: 'Into how many parallel chunks to split (default: 4)'
        required: false
        default: '4'

jobs:
  split:
    runs-on: ubuntu-latest
    outputs:
      chunk-list: ${{ steps.calc.outputs.chunk-list }}
    steps:
      - uses: actions/checkout@v3

      - name: Calculate chunk offsets
        id: calc
        run: |
          # locate the mirrored FRN list
          FILE=docs/fca-dashboard/data/all_frns_with_names.json
          if [ ! -f "$FILE" ]; then
            echo "❌ $FILE not found" >&2
            exit 1
          fi

          # how many total?
          full=$(jq 'length' "$FILE")
          echo "ℹ️ Found $full FRNs"

          # apply user-specified limit?
          if [ -n "${{ github.event.inputs.limit }}" ]; then
            total=${{ github.event.inputs.limit }}
          else
            total=$full
          fi
          echo "ℹ️ Using total = $total"

          # how many chunks?
          chunks=${{ github.event.inputs.chunks }}
          echo "ℹ️ Splitting into $chunks chunks"

          # compute chunk size (ceiling)
          step=$(( (total + chunks - 1) / chunks ))
          echo "ℹ️ Chunk size = $step"

          # build starting offsets 0, step, 2*step, ...
          offsets=()
          for ((i=0; i<total; i+=step)); do
            offsets+=($i)
          done

          # serialize to JSON array
          json=$(printf '%s\n' "${offsets[@]}" | jq -R . | jq -s .)
          echo "ℹ️ Offsets = $json"

          # emit via new output syntax
          echo "chunk-list=$json" >> $GITHUB_OUTPUT

  fetch:
    needs: split
    runs-on: ubuntu-latest
    strategy:
      matrix:
        offset: ${{ fromJson(needs.split.outputs.chunk-list) }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Fetch individuals chunk ${{ matrix.offset }}
        env:
          FCA_API_EMAIL: ${{ secrets.FCA_API_EMAIL }}
          FCA_API_KEY:   ${{ secrets.FCA_API_KEY }}
        run: |
          ARGS="--offset ${{ matrix.offset }}"
          if [ -n "${{ github.event.inputs.limit }}" ]; then
            ARGS="$ARGS --limit ${{ github.event.inputs.limit }}"
          fi
          python fca-dashboard/scripts/fetch_firm_individuals.py $ARGS

      - name: Archive chunk
        uses: actions/upload-artifact@v3
        with:
          name: individuals-chunk-${{ matrix.offset }}
          path: fca-dashboard/data/individuals_chunk_${{ matrix.offset }}.json

  merge:
    needs: fetch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download all chunk artifacts
        uses: actions/download-artifact@v3
        with:
          path: chunks/

      - name: Merge chunks
        run: |
          python fca-dashboard/scripts/merge_fca_individuals.py \
            chunks/ fca-dashboard/data/fca_individuals_by_firm.json

      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add fca-dashboard/data/fca_individuals_by_firm.json
          git diff --cached --quiet || git commit -m "chore(fca): update firm individuals"
          git push origin HEAD:main
