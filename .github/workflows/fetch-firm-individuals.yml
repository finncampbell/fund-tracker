# .github/workflows/fetch-firm-individuals.yml
name: Fetch FCA Firm Individuals (Ad-hoc)

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      chunks:
        description: 'Number of parallel chunks to split the FRN list into'
        required: true
        default: '4'

jobs:
  split:
    runs-on: ubuntu-latest
    outputs:
      chunk-list: ${{ steps.build.outputs.chunk-list }}
      total_frns: ${{ steps.build.outputs.total_frns }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Build chunk list
        id: build
        run: |
          # Count total FRNs in the master file
          total=$(jq 'length' fca-dashboard/data/all_frns_with_names.json)
          echo "total_frns=$total" >> "$GITHUB_OUTPUT"

          # Read desired number of chunks from workflow input
          N=${{ github.event.inputs.chunks }}

          # Compose a JSON array of chunk indices [0,1,2,...,N-1]
          chunk_list=$(jq -n --arg n "$N" '[range(0; ($n|tonumber))]')

          # Emit under the keys declared in outputs:
          echo "chunk-list=$chunk_list" >> "$GITHUB_OUTPUT"

  fetch:
    needs: split
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chunk_index: ${{ fromJson(needs.split.outputs.chunk-list) }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Fetch individuals chunk ${{ matrix.chunk_index }}
        env:
          FCA_API_EMAIL: ${{ secrets.FCA_API_EMAIL }}
          FCA_API_KEY:   ${{ secrets.FCA_API_KEY }}
        run: |
          # Determine total FRNs and chunk size
          total=${{ needs.split.outputs.total_frns }}
          N=${{ github.event.inputs.chunks }}
          chunk_size=$(( (total + N - 1) / N ))

          # Calculate offset and limit for this chunk
          offset=$(( matrix.chunk_index * chunk_size ))
          limit=$chunk_size

          python fca-dashboard/scripts/fetch_firm_individuals.py --offset $offset --limit $limit

      - name: Upload chunk result
        uses: actions/upload-artifact@v3
        with:
          name: chunk-${{ matrix.chunk_index }}
          path: fca-dashboard/data/fca_individuals_by_firm.json

  merge:
    needs: fetch
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Download all chunk artifacts
        uses: actions/download-artifact@v3
        with:
          name: chunk-*
          path: ./chunks

      - name: Merge chunked JSON files
        run: |
          python3 - << 'EOF'
          import json, glob

          merged = {}
          for path in glob.glob('chunks/chunk-*/fca-individuals_by_firm.json'):
              data = json.load(open(path, encoding='utf-8'))
              merged.update(data)

          with open('fca-dashboard/data/fca_individuals_by_firm.json', 'w', encoding='utf-8') as f:
              json.dump(merged, f, ensure_ascii=False, indent=2)
          EOF

      - name: Commit & push merged result
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add fca-dashboard/data/fca_individuals_by_firm.json
          git diff --cached --quiet || git commit -m "chore(fca): update firm individuals"
          git push origin HEAD:main
